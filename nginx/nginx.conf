# Generated by nginxconfig.io
# Replace yourdomain.com with your own domain name.
# this config works with docker nginx container

user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 100M;

    upstream docker-radarr {
        server radarr:7878;
    }
 
    upstream docker-sonarr {
        server sonarr:8989;
    }

    upstream docker-bazarr {
        server bazarr:6767;
    }
 
    upstream docker-transmission {
        server transmission-vpn:9091;
    }

    upstream docker-jackett {
        server jackett:9117;
    }

    upstream docker-plex-backend {
        server plex-server:32400;
		keepalive 32;
    }

	upstream docker-nzbget {
    	server nzbget:6789;
    }

	upstream docker-ombi {
    	server ombi:3579;
    }

    upstream docker-deluge {
        server deluge:8112;
    }
	# logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	# limits
	limit_req_log_level warn;
	limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

	# SSL
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:1m;  # about 4000 sessions
    ssl_session_tickets off;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

	# OCSP Stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 1.1.1.1 1.0.0.1 valid=60s;
	resolver_timeout 2s;

    # wget https://ssl-config.mozilla.org/ffdhe4096.txt -O /etc/nginx/dhparam.pem
    ssl_dhparam dhparam.pem;

	# load configs
	include /etc/nginx/conf.d/*.conf;

	# yourdomain.com
	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
	
		server_name yourdomain.com;
		root /var/www/html/dlbox;
		index index.html;
		add_header Strict-Transport-Security    "max-age=31536000";
		add_header X-Content-Type-Options       nosniff;
		add_header X-XSS-Protection             "1; mode=block";

		# SSL
		ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;
	
		
		# . files
		location ~ /\.(?!well-known) {
			deny all;
		}
#cd $dlbox_folder
#sudo sh -c "echo -n 'USERNAMEHERE:' >> ./nginx/auth/.htpasswd"
#sudo sh -c "openssl passwd  -apr1 >> ./nginx/auth/.htpasswd"		
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;


		# reverse proxy

		#radarr
		location ^~ /radarr {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-radarr;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		location ^~ /radarr/api {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-radarr;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		#sonarr
		location ^~ /sonarr {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-sonarr;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		location ^~ /sonarr/api {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-sonarr;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}
		#jackett
		location ^~ /jackett {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-jackett;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    #proxy_set_header Connection        "upgrade";  #jackett can't handle this, so remove or comment this row
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		location ^~ /jackett/api {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-jackett/api;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    #proxy_set_header Connection        "upgrade";  #jackett can't handle this, so remove or comment this row
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}	

		location ^~ /jackett/dl {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-jackett/dl;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		  }
			

		#transmission
		location ^~ /transmission {
			limit_req zone=ip burst=30 delay=10;
  		 	auth_basic "Restricted";
   			auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-transmission;

    		proxy_pass_header  X-Transmission-Session-Id; #transmission cries without this
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;
		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;

		}
		
		#deluge
		location /deluge {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		return 301 $scheme://$host/deluge/;
		}

		location ^~ /deluge/ {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-deluge;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    #proxy_set_header Host              127.0.0.1;  # uncomment this row if you want to use bind address as localhost for reverse proxy
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		  
    		rewrite /deluge(.*) $1 break;
    		proxy_set_header X-Deluge-Base "/deluge/";
		}

		#bazarr
		location /bazarr {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		return 301 $scheme://$host/bazarr/;
		}
		location ^~ /bazarr/ {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
			proxy_pass http://docker-bazarr;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		#plex
		#https://www.reddit.com/r/PleX/comments/3xz4ph/plex_behind_a_ssl_nginx_reverse_proxy/cy9l9fj/
		location / {
			if ($args ~ (.*)X-Plex-Device(.*)) {
				proxy_pass http://docker-plex-backend;
			}

			if ($http_referer ~ (.*)plex(.*)) {
				proxy_pass http://docker-plex-backend;
			}
		}

		location ~ ^/(\?(?:.*)(X-Plex-Device=)|web|video|photo|library|web|status|system|updater|clients|:|playQueues)(.*) {
			proxy_pass http://docker-plex-backend;
			proxy_redirect  http://docker-plex-backend /;
			# set some headers and proxy stuff.
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_redirect off;

			# include Host header
			proxy_set_header Host $host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 36000s;
			proxy_pass_request_headers on;
			gzip on;
			gzip_vary on;
			gzip_min_length 1000;
			gzip_proxied any;
			gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
			gzip_disable "MSIE [1-6]\.";

		}
		location /plex {
			rewrite ^/plex(.*)$ /web$1 break;
			proxy_pass http://docker-plex-backend;
			proxy_headers_hash_max_size 51200;
			proxy_headers_hash_bucket_size 6400;
			proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_read_timeout 36000s;
			proxy_pass_request_headers on;
		}

		#nzbget
		location /nzbget {
			limit_req zone=ip burst=30 delay=10;
#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;
    		proxy_pass http://docker-nzbget;
		    proxy_http_version  1.1;
		    proxy_cache_bypass  $http_upgrade;

		    proxy_set_header Upgrade           $http_upgrade;
		    proxy_set_header Connection        "upgrade";
		    proxy_set_header Host              $host;       
		    proxy_set_header X-Real-IP         $remote_addr;
		    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-Host  $host;
		    proxy_set_header X-Forwarded-Port  $server_port;
		}

		#ombi
		location /ombi {
			return 301 $scheme://$host/ombi/;
		}

		location ^~ /ombi/ {
			limit_req zone=ip burst=30 delay=10;

#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;

			proxy_pass http://docker-ombi;
			proxy_http_version  1.1;
			proxy_cache_bypass  $http_upgrade;

			proxy_set_header Upgrade           $http_upgrade;
			proxy_set_header Connection        "upgrade";
			proxy_set_header Host              $host;       
			proxy_set_header X-Real-IP         $remote_addr;
			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host  $host;
			proxy_set_header X-Forwarded-Port  $server_port;

		}

		# This allows access to the actual api
		location ^~ /ombi/api {
			limit_req zone=ip burst=30 delay=10;

#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;

			proxy_pass http://docker-ombi;
			proxy_http_version  1.1;
			proxy_cache_bypass  $http_upgrade;

			proxy_set_header Upgrade           $http_upgrade;
			proxy_set_header Connection        "upgrade";
			proxy_set_header Host              $host;       
			proxy_set_header X-Real-IP         $remote_addr;
			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host  $host;
			proxy_set_header X-Forwarded-Port  $server_port;

		}
		if ($http_referer ~* /ombi) {
			rewrite ^/api/(.*) /ombi/api/$1? redirect;
		}

		# This allows access to the documentation for the api
		location ^~ /ombi/swagger {
			limit_req zone=ip burst=30 delay=10;

#  		 	 auth_basic "Restricted";
#   		 auth_basic_user_file /etc/nginx/auth/.htpasswd;

			proxy_pass http://docker-ombi;
			proxy_http_version  1.1;
			proxy_cache_bypass  $http_upgrade;

			proxy_set_header Upgrade           $http_upgrade;
			proxy_set_header Connection        "upgrade";
			proxy_set_header Host              $host;       
			proxy_set_header X-Real-IP         $remote_addr;
			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host  $host;
			proxy_set_header X-Forwarded-Port  $server_port;

		}
		if ($http_referer ~* /ombi) {
			rewrite ^/swagger/(.*) /ombi/swagger/$1? redirect;
		}

	}
	
	# HTTP redirect
	server {
		listen 80;
		listen [::]:80;
	
		server_name yourdomain.com;
	
		# ACME-challenge
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/html/acme;
			limit_req zone=ip burst=30 delay=10;
		}
	
		location / {
			limit_req zone=ip burst=30 delay=10;
			return 301 https://yourdomain.com$request_uri;
		}
	}
}
